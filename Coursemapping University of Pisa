from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
import time
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pandas as pd
from selenium.common.exceptions import TimeoutException
from selenium.common.exceptions import NoSuchElementException

# keywords to search for italian/english -  we can change these
keyword1 = "climate change"
keyword2 = "cambiamento climatico"
keyword3 = "cambiamenti climatici"

#i ran the program three times, with url as a changing variable for each run, representing the course catalogues for bachelor, master, and other courses respectively
#url="https://unipi.coursecatalogue.cineca.it/corsi/2024?gruppo=1709634589846"
#url="https://unipi.coursecatalogue.cineca.it/corsi/2024?gruppo=1709634589847"
url="https://unipi.coursecatalogue.cineca.it/corsi/2024?gruppo=1725525080658"

#store the results in a list
matched_courses = []

def click_to_courselist():
    """in a list of hyperlinks to degrees, clicks each degree, clicks to the courses offered page."""
    #Load please
    time.sleep(5)
    #find all degree links, using html (this might differ between course catalogues)
    degrees =  driver.find_elements(By.CSS_SELECTOR, 'a[href^="/corsi/2024/"]')
    
    for degree in degrees:
        #identify the degree link
        degree_link = degree.get_attribute('href')
        
         #open the degree link
        driver.execute_script("window.open(arguments[0], '_blank');", degree_link)
        driver.switch_to.window(driver.window_handles[-1])  # Switch to the new tab
        
         #let the degree page load completely
        time.sleep(3)
        
        try:
            teachings_offered_button = WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, 'a[href^="/corsi/2024/"][href*="insegnamenti-offerta?annoOfferta=2024"]')) #html variable
            )    
            teachings_offered_button.click()
            print("teachings offered clicked!")
            
        except (TimeoutException, NoSuchElementException):
            print("teachings offered button not found or not clickable — continuing loop.")
        
         #let the courses page load completely
        time.sleep(3)
        
        courses = driver.find_elements(By.CSS_SELECTOR, 'a[href^="/insegnamenti/2024/"]') #html variable
        for course in courses:
            #identify the degree link
            course_link = course.get_attribute('href')
        
             #open the degree link
            driver.execute_script("window.open(arguments[0], '_blank');", course_link)
            driver.switch_to.window(driver.window_handles[-1])  # Switch to the new tab
            
            time.sleep(5)
            #print("opened a course!")
            
            search_course(course_link)
            
            #close the tab and switch back to the original page
            driver.close()
            driver.switch_to.window(driver.window_handles[-1])
        
        #close the tab and switch back to the original page
        driver.close()
        driver.switch_to.window(driver.window_handles[0])

def search_course(course_link):
    "searches for keywords in a course description and title"
    try:
        # Click the first visible "Obiettivi" section (topmost)
        obiettivi_section = WebDriverWait(driver, 3).until(
            EC.element_to_be_clickable((By.XPATH, '//div[contains(text(), "Obiettivi formativi")]'))
        )
        obiettivi_section.click()
        #print("Expanded 'Obiettivi' section")
        time.sleep(1)
    except TimeoutException:
        print("'Obiettivi' section not found or not clickable")
        
    #retrieve the entire page content
    page_content = driver.find_element(By.TAG_NAME, "body").text
    #print(page_content)
    
    #initialize keyword details
    keyword_found = None
    keyword1_count = page_content.count(keyword1.lower())
    keyword2_count = page_content.count(keyword2.lower())
    keyword3_count = page_content.count(keyword3.lower())
    keyword_counts = {
    keyword1: keyword1_count,
    keyword2: keyword2_count,
    keyword3: keyword3_count}
    
    #check if any keyword is present  and collect details
    if keyword1_count > 0 or keyword2_count > 0 or keyword3_count > 0:
        keyword_found = max(keyword_counts, key=keyword_counts.get)
        course_info = {
            "Course URL": course_link,
            "Keyword Found": keyword_found,
            f"{keyword1} Count": keyword1_count,
            f"{keyword2} Count": keyword2_count,
            f"{keyword3} Count": keyword3_count
        }
        matched_courses.append(course_info)
        print(f"Keyword '{keyword_found}' found in: {course_link}")

#working loop
#set up webdriver
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))

#open the webpage
driver.get(url)

#let the page load completely 
time.sleep(5)

#accept cookies?
# Wait for the "Accept all" button to appear and click it
try:
    accept_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.ID, "c-p-bn")) #the html changes here
    )
    accept_button.click()
    print("Cookies accepted!")
except Exception as e:
    print(f"An error occurred: {e}")

#search as though it is the last page
click_to_courselist()

#SOMETIMES PISA'S WEBSITE CRASHES. HERE IS A MODIFIED VERSION IF YOU NEED TO RESTART THE SEARCH FROM THE POINT AT WHICH IT CRASHED

def resume_click_to_courselist(resume_degree_url=None, resume_course_url=None):
    """goes through degrees and courses, resuming from where it left off if specified."""
    time.sleep(5)
    degrees = driver.find_elements(By.CSS_SELECTOR, 'a[href^="/corsi/2024/"]') #html variable

    # Prepare list of unique degree links
    degree_links = [degree.get_attribute('href') for degree in degrees]

    resume_degrees = resume_degree_url is None  # if none, start immediately
    for degree_link in degree_links:
        if not resume_degrees:
            if degree_link == resume_degree_url:
                resume_degrees = True
            else:
                continue  # skip until we reach the resume point

        # open degree link
        driver.execute_script("window.open(arguments[0], '_blank');", degree_link)
        driver.switch_to.window(driver.window_handles[-1])
        time.sleep(3)

        try:
            teachings_offered_button = WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, 'a[href^="/corsi/2024/"][href*="insegnamenti-offerta?annoOfferta=2024"]')) #html variable
            )    
            teachings_offered_button.click()
            print("teachings offered clicked!")

        except (TimeoutException, NoSuchElementException):
            print("teachings offered button not found or not clickable — continuing loop.")
            driver.close()
            driver.switch_to.window(driver.window_handles[0])
            continue

        time.sleep(3)

        courses = driver.find_elements(By.CSS_SELECTOR, 'a[href^="/insegnamenti/2024/"]') #html variable
        course_links = [course.get_attribute('href') for course in courses]

        resume_courses = resume_course_url is None  # only skip courses on resume degree
        for course_link in course_links:
            if not resume_courses:
                if course_link == resume_course_url:
                    resume_courses = True
                else:
                    continue

            driver.execute_script("window.open(arguments[0], '_blank');", course_link)
            driver.switch_to.window(driver.window_handles[-1])
            time.sleep(5)

            search_course(course_link)

            driver.close()
            driver.switch_to.window(driver.window_handles[-1])

        driver.close()
        driver.switch_to.window(driver.window_handles[0])

resume_degree_url = "insert link to degree it crashed at"
resume_course_url = "insert link to course you want to restart from"

#loop for search when restarting at a given point after a crash
#set up webdriver
driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))

#open the webpage
driver.get(url)

#let the page load completely 
time.sleep(5)

#accept cookies?
# Wait for the "Accept all" button to appear and click it
try:
    accept_button = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((By.ID, "c-p-bn")) #the html changes here
    )
    accept_button.click()
    print("Cookies accepted!")
except Exception as e:
    print(f"An error occurred: {e}")

resume_click_to_courselist(resume_degree_url, resume_course_url)
